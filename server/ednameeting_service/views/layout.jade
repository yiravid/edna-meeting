doctype html
html
  head
      title Edna Meetingâ„¢
      link(rel='stylesheet', href='css/vendor/material.min.css')
      link(rel='stylesheet', href='https://fonts.googleapis.com/icon?family=Material+Icons')
      link(rel='stylesheet', href='css/ednameeting-ui.css')
  body
    block content
    script(src='js/vendor/material.min.js')
    script(src='js/vendor/jquery-3.1.0.min.js')
    script(src='js/ednameeting-ui.js')
    script(src='/socket.io/socket.io.js')
    script.
      var socket = io()

      // when client connects to server
      socket.on('connect', function () {
        socket.emit('user-connected', {
          name: 'User',
          ts: new Date()
          }, function(data) {
            console.log('server says: %s', data);
          });

          // connect to meeting
          socket.emit();
      });

      // receive welcome from server
      socket.on('welcome', function(data) {

        console.log(data.msg);
        console.log('Your meeting room was setup at: %s', data.timestamp);
      });

      // client start meeting
      socket.on('start-meeting', function(data) {

        //start transcription
        showRecordingUI(data.payload.roomName);

        //emit user started the meeting
        socket.emit('user-started-meeting', {
          room: {
            name: 'Red Tape',
            number: '101'
          }
        }, function(user, room) {
          console.log('user %s is now in meeting room: %s', user.name, room.name);
        });
      });
      
      socket.on('end-meeting', function(data) {

        //stop transcription
        finishRecordingUI();

        //emit user started the meeting
        socket.emit('user-started-meeting', {
          room: {
            name: 'Red Tape',
            number: '101'
          }
        }, function(user, room) {
          console.log('user %s is now in meeting room: %s', user.name, room.name);
        });
      });
      
      socket.on('invite', function(data) {
        //invite
        betsyAdded();
      });
